@model IEnumerable<Accounting_System.Models.SalesInvoice>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Sales Invoice";
    var dateFrom = ViewBag.DateFrom;
    var dateTo = ViewBag.DateTo;

    // Convert the date strings to DateTime objects
    DateTime dateFromFormatted;
    if (DateTime.TryParse(dateFrom, out dateFromFormatted))
    {
        // Format the DateTime objects in the desired format
        dateFrom = dateFromFormatted.ToString("MM/dd/yyyy");
    }

    DateTime dateToFormatted;
    if (DateTime.TryParse(dateTo, out dateToFormatted))
    {
        // Format the DateTime objects in the desired format
        dateTo = dateToFormatted.ToString("MM/dd/yyyy");
    }
    DateTime now = DateTime.Now;

    decimal totalAmount = 0;
    decimal totalQuantity = 0;
    decimal totalVatableSales = 0;
    decimal totalVatableAmount = 0;
    decimal totalExempted = 0;
    decimal totalZeroRated = 0;
}

<br />
<div class="text-end">
    <img src="~/img/Filpride.jpg" height="" width="130px" />
</div>
<div class="text-center">
    <h2><u><b>&nbsp;FILPRIDE RESOURCES INC.&nbsp;</b></u></h2>
    <p style="line-height: 1; margin-top:-7px;">
        57 Westgate Offices, Sampson RO CBD, Subic Bay, Freeport Zone,<br />
        Kalaklan Olongapo City, 2000 Zambales Philippines<br />
        VAT Reg. TIN: 000-216-589-00000
    </p>

    <h3><span style="display: inline-block;"><b>SALES BOOK</b></span></h3>


</div>
@if (dateFrom == dateTo)
{
<p style="line-height:1px; margin-top:20px; margin-bottom:-10px;">
    Period: @dateFrom
</p>
}else{
    <p style="line-height:1px; margin-top:20px; margin-bottom:-10px;">
        Period: From @dateFrom To @dateTo
    </p>
}
<div class="table-responsive" style="margin-top:20px;">
    <table class="table-hover w-100">
        <thead>
            <tr class="table-bordered text-primary" style="border: 1px solid black;">
                <th>
                    @Html.DisplayNameFor(model => model.TransactionDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SerialNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SoldTo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TinNo)
                </th>
                @* <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th class="text-end">
                    @Html.DisplayNameFor(model => model.Quantity)
                </th> *@
                <th class="text-end">
                    @Html.DisplayNameFor(model => model.Amount)
                </th>
                <th class="text-end">
                    @Html.DisplayNameFor(model => model.VatAmount)
                </th>
                <th class="text-end">
                    @Html.DisplayNameFor(model => model.VatableSales)
                </th>
                <th class="text-end">
                    VAT Exempt Sales
                </th>
                <th class="text-end">
                    <div style="margin-right:20px;">Zero Rated</div>
                </th>
              @*   <th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th> *@
            </tr>
        </thead>
        <tbody>

            @foreach (var invoice in Model)
            {
                <tr class="align-text-bottom">
                    <td>
                        @Html.DisplayFor(model => invoice.TransactionDate)
                    </td>
                    <td>
                        @Html.DisplayFor(model => invoice.FormattedSerialNo)
                    </td>
                    <td>
                        @Html.DisplayFor(model => invoice.SoldTo)
                    </td>
                    <td>
                        @Html.DisplayFor(model => invoice.TinNo)
                    </td>
                   @*  <td>
                        @Html.DisplayFor(model => invoice.ProductName)
                    </td>
                    <td class="text-end">
                        @Html.DisplayFor(model => invoice.Quantity)
                    </td> *@
                    <td class="text-end">
                        @Html.DisplayFor(model => invoice.Amount)
                    </td>
                    <td class="text-end">
                        @Html.DisplayFor(model => invoice.VatAmount)
                    </td>
                    <td class="text-end">
                        @Html.DisplayFor(model => invoice.VatableSales)
                    </td>
                    @if (invoice.CustomerType == "Exempt")
                    {
                        <td class="text-end">
                            @Html.DisplayFor(model => invoice.Amount)
                            @{
                                totalExempted += invoice.Amount;
                            }
                        </td>
                    }
                    else
                    {
                        <td class="text-end">
                            0.00
                        </td>
                    }
                    @if (invoice.CustomerType == "Zero Rated")
                    {
                        <td class="text-end">
                            <div style="margin-right:20px;">
                                @Html.DisplayFor(model => invoice.Amount)
                            @{
                                totalZeroRated += invoice.Amount;
                            }
                            </div>
                        </td>
                    }
                    else
                    {
                        <td class="text-end">
                            <div style="margin-right:20px;"> 0.00 </div>
                        </td>
                    }
                  @*   <td>
                        @Html.DisplayFor(model => invoice.Remarks)
                    </td> *@
                </tr>

                totalAmount += invoice.Amount;
               @*  totalQuantity += invoice.Quantity; *@
                totalVatableSales += invoice.VatableSales;
                totalVatableAmount += invoice.VatAmount;
            }
            <tr class="align-text-bottom" style="border: 2px solid black;">
                @{
                    var formattedTotalAmount = String.Format("{0:n}", totalAmount);
                    var formattedTotalQuantity = String.Format("{0:n}", totalQuantity);
                    var formattedTotalVatableSales = String.Format("{0:n}", totalVatableSales);
                    var formattedTotalVatAmount = String.Format("{0:n}", totalVatableAmount);
                    var formattedTotalExempted = String.Format("{0:n}", totalExempted);
                    var formattedTotalZeroRated = String.Format("{0:n}", totalZeroRated);

                <td></td>
                <td></td>
                <td></td>
                <td class="text-center"><b>TOTAL:</b></td>
                // <td class="text-end">@totalQuantities</td>
                <td class="text-end">@formattedTotalAmount</td>
                <td class="text-end">@formattedTotalVatAmount</td>
                <td class="text-end">@formattedTotalVatableSales</td>
                <td class="text-end">@formattedTotalExempted</td>
                <td class="text-end"><div style="margin-right:20px;">@formattedTotalZeroRated</div></td>
                }
            </tr>
        </tbody>
    </table>
</div>

<br />
<div class="text-start w-100 footer" style="margin-top:50px;">
    <p style="line-height: 1;">
        <em>
        <strong>Software Name :</strong> Accounting Administration System (AAS)
        <br />
        <strong>Version :</strong> v1.0
        <br />
        <strong>Printed By :</strong> @UserManager.GetUserName(User).ToUpper()
        <br />
        <strong>Date & Time Printed :</strong> @DateTime.Now.ToString("MM/dd/yyyy hh:mm tt")
        </em>
    </p>
</div>

<div>
    <a class="btn btn-success" onclick="printPage()" id="printButton">Print</a>
    <a asp-action="SalesBook" class="btn" id="otherButton">Back</a>
</div>

@section Scripts{
    <script>
        var originalFontSizes = [];
        function printPage() {
            var printButton = document.getElementById("printButton");
            var otherButton = document.getElementById("otherButton");

            // Hide the header and footer
            document.querySelector("header").style.display = "none";
            document.querySelector("footer").style.display = "none";

            // Hide the buttons before printing
            if (printButton) {
                printButton.style.visibility = "hidden";
            }
            if (otherButton) {
                otherButton.style.visibility = "hidden";
            }

            // Get all paragraph elements
            var paragraphs = document.querySelectorAll("p");

            // Store the original font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                originalFontSizes[i] = paragraphs[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                paragraphs[i].style.fontSize = "12px";
            }

            // Get all table text elements
            var mytable = document.querySelectorAll("table");

            // Store the original font sizes
            for (var i = 0; i < mytable.length; i++) {
                originalFontSizes[i] = mytable[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                mytable[i].style.fontSize = "12px";
            }

            // Call the print function
            window.print();

            // Restore the font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                paragraphs[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the font sizes
            for (var i = 0; i < mytable.length; i++) {
                mytable[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the buttons' visibility after printing (optional)
            if (printButton) {
                printButton.style.visibility = "visible";
            }
            if (otherButton) {
                otherButton.style.visibility = "visible";
            }

            // Restore the header and footer's visibility after printing (optional)
            document.querySelector("header").style.display = "";
            document.querySelector("footer").style.display = "";
        }
    </script>
}