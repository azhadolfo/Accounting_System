@using System.ComponentModel.DataAnnotations;
@model Accounting_System.Models.Customer

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Customer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TinNo" class="control-label"></label>
                <input asp-for="TinNo" class="form-control" />
                <span asp-validation-for="TinNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BusinessStyle" class="control-label"></label>
                <input asp-for="BusinessStyle" class="form-control" />
                <span asp-validation-for="BusinessStyle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Terms" class="control-label"></label>
                <input asp-for="Terms" class="form-control" />
                <span asp-validation-for="Terms" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CustomerType" class="control-label"></label>
                <div class="col">
                    <select asp-for="CustomerType" class="form-select">
                        <option value="" selected disabled>-- Select the Customer Type --</option>
                        @foreach (var customerType in Enum.GetValues(typeof(CustomerType)))
                        {
                            var enumMember = typeof(CustomerType).GetMember(customerType.ToString())[0];
                            var displayAttribute = enumMember.GetCustomAttributes(typeof(DisplayAttribute), false).FirstOrDefault() as DisplayAttribute;

                            string displayName = displayAttribute != null ? displayAttribute.Name : customerType.ToString();

                            <option value="@customerType">@displayName</option>
                        }
                    </select>
                    <span asp-validation-for="CustomerType" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="WithHoldingVat" /> @Html.DisplayNameFor(model => model.WithHoldingVat)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="WithHoldingTax" /> @Html.DisplayNameFor(model => model.WithHoldingTax)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
