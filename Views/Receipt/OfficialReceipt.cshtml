@model Accounting_System.Models.OfficialReceipt
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<br />
<div class="text-end">
    <img src="~/img/Filpride.jpg" height="" width="130px" />
</div>
<div class="text-center">
    <h2><u><b>&nbsp;FILPRIDE RESOURCES INC.&nbsp;</b></u></h2>
    <p style="line-height: 1; margin-top:-7px;">
        57 Westgate Offices, Sampson RO CBD, Subic Bay, Freeport Zone,<br />
        Kalaklan Olongapo City, 2000 Zambales Philippines<br />
        VAT Reg. TIN: 000-216-589-00000
    </p>
</div>

<h3><span style="display: inline-block;"><b>OFFICIAL RECEIPT</b></span></h3>
<div class="text-end" style="margin-top:-70px;"><br />
    <h6><b>Official Receipt No.&nbsp;@Html.DisplayFor(model => model.ORNo)</b></h6>
</div>

<div class="table-responsive">
    <table class="w-100" style="margin-top:-10px;">
        <tbody>
            <tr>
                <td>
                    <br />
                    <div class="w-100 text-end">
                    <span><b>Date:</b></span>
                        <span class="underline" style="display: inline-block; width: 20%; text-align:center">&nbsp;@Html.DisplayFor(model => model.Date)</span><br />
                    </div>

                    <span><b>Received from:</b></span>
                    <span class="underline" style="display: inline-block; width: 83%;">&nbsp;&nbsp;@Html.DisplayFor(model => model.StatementOfAccount.Customer.Name)</span><br />

                    <span><b>with TIN</b></span>
                    <span class="underline" style="display: inline-block; width: 90%;">&nbsp;&nbsp;@Html.DisplayFor(model => model.StatementOfAccount.Customer.TinNo)</span><br />

                    <span><b>and address at</b></span>
                    <span class="underline" style="display: inline-block; width: 83%;">&nbsp;&nbsp;@Html.DisplayFor(model => model.StatementOfAccount.Customer.Address)</span><br />

                    <span><b>engaged in the business style of</b></span>
                    <span class="underline" style="display: inline-block; width: 65%;">&nbsp;&nbsp;@Html.DisplayFor(model => model.StatementOfAccount.Customer.BusinessStyle)</span><br />

                    <span><b>the sum of</b></span>
                    <span class="underline" style="display: inline-block; width: 87%;">&nbsp;&nbsp;One Thousand Pesos Only</span><br />

                    <span><b>pesos</b></span>
                    <span class="underline" style="display: inline-block; width: 92%;">(₱ @Model.StatementOfAccount.Amount)</span><br />

                    <span><b>In partial/full payment for</b></span>
                    <span class="underline" style="display: inline-block; width: 72%;">&nbsp;&nbsp;Full</span><br />

                    <span><b>Reference Receipt No.</b></span>
                    <span class="underline" style="display: inline-block; width: 75%;">&nbsp;&nbsp;@Html.DisplayFor(model => model.ReferenceNo)</span>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div style="margin-top:20px;">
    <table class="table-bordered w-100">
        <tbody>
            <tr>
                <td colspan="4">In settlement of the following</td>
            </tr>
@*             <tr>
                <td class="w-50 text-center">Particulars</td>
                <td class="w-50 text-center">Amount</td>
            </tr> *@
            <tr>
                @{
                    string concatenatedValue = "0.0" + Model.StatementOfAccount.Service.Percent.ToString();
                    decimal vatableSales = Model.StatementOfAccount.Amount / (decimal)1.12;
                    decimal totalSalesVatInclusive = Model.StatementOfAccount.Amount - vatableSales;
                    decimal EWT = vatableSales * decimal.Parse(concatenatedValue);
                    decimal totalAmountDue = Model.StatementOfAccount.Amount - EWT;

                }
                <td class="w-25" style="padding-left:10px;">VATables Sales</td>
                <td class="w-25">
                    @if (Model.StatementOfAccount.Customer.CustomerType == "Vatable")
                    {
                        <h6 style="height: 9px; padding-left:10px;">@Html.DisplayFor(model => vatableSales)</h6>
                    }
                </td>
                <td colspan="2" class="w-50" style="padding-left:10px;"></td>
            </tr>
            <tr>
                <td style="padding-left:10px;">VAT-Exempt Sales</td>
                <td>
                    @if (Model.StatementOfAccount.Customer.CustomerType == "Exempt")
                    {
                        <h6 style="height: 9px; padding-left:10px;">@Html.DisplayFor(model => model.Amount)</h6>
                    }
                </td>
                <td style="padding-left:10px;">Form of Payment:</td>
                <td class="w-25" style="padding-left:10px;">@Html.DisplayFor(model => model.FormOfPayment)</td>
            </tr>
            <tr>
                <td style="padding-left:10px;">Zero Rated Sales</td>
                <td>
                    @if (Model.StatementOfAccount.Customer.CustomerType == "Zero Rated")
                    {
                        <p style="height: 9px; padding-left:10px;">@Html.DisplayFor(model => model.Amount)</p>
                    }
                </td>
                <td style="padding-left:10px;">Check no.</td>
                <td style="padding-left:10px;">@Html.DisplayFor(model => model.CheckNo)</td>
            </tr>
            <tr>
                <td style="padding-left:10px;">VAT Amount</td>
                <td></td>
                <td style="padding-left:10px;">Check Date</td>
                <td style="padding-left:10px;">@Html.DisplayFor(model => model.CheckDate)</td>
            </tr>
            <tr>
                <td style="padding-left:10px;">Total Sales(VAT Inclusive)</td>
                <td>
                    @if (Model.StatementOfAccount.Customer.CustomerType == "Vatable")
                    {
                        <h6 style="height: 9px; padding-left:10px;">@Html.DisplayFor(model => totalSalesVatInclusive)</h6>
                    }
                </td>
                
                <td style="padding-left:10px;">AMOUNT</td>
                <td style="padding-left:10px;">@Html.DisplayFor(model => totalAmountDue)</td>
            </tr>
            <tr>
                <td style="padding-left:10px;">Less: Withholding Tax</td>
                <td style="padding-left:10px;">@Html.DisplayFor(model => EWT)</td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td style="padding-left:10px;">Total Amount Due</td>
                <td style="padding-left:10px;">@Html.DisplayFor(model => totalAmountDue)</td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            
        </tbody>
    </table>
</div>
<div style="margin-top:20px;">
    <table class="table-bordered w-100">
        <tbody>
            <tr>
                <td class="text-center" style="width:33%">SOA DATE</td>
                <td class="text-center" style="width:33%">SOA #</td>
                <td class="text-center" style="width:33%">AMOUNT</td>
            </tr>
            <tr class="text-center">
                <td style="width:33%">@Model.StatementOfAccount.CreatedDate.ToString("yyyy-dd-MM")</td>
                <td style="width:33%">@Html.DisplayFor(model => model.StatementOfAccount.FormmatedNumber)</td>
                <td style="width:33%">@Html.DisplayFor(model => model.StatementOfAccount.Amount)</td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
        </tbody>
    </table>
</div>

@* <div class="w-100 text-end">
    <span>By:</span>
    <span class="underline" style="display: inline-block; width: 30%;"></span><br />
    <h6 style="margin-right:15px;">Authorized Representative</h6>
    <p style="line-height:1px;">Accreditation No. ___</p>
    <p style="line-height:1px;">Accreditation Date:___* Valid up to:___</p>
</div> *@

<div class="text-center w-100" style="margin-top:20px;">
    <p @* style="line-height: 1;" *@>
        <span>Acknowledgement Certificate No:</span>
        <span style="display: inline-block; width: 30%;"></span>
        <span>Date Issued:</span>
        <span style="display: inline-block; width: 15%;"></span><br />
        Series from: OR0000000001 - OR9999999999
        Date and Time Created:&nbsp;@Html.DisplayFor(model => model.CreatedDate)
    </p>
</div>

<br />
<div class="text-start w-100 footer" style="margin-top:50px;">
    <p style="line-height: 1;">
        <em>
            <strong>Software Name :</strong> Accounting Administration System (AAS)
            <br />
            <strong>Version :</strong> v1.0
            <br />
            <strong>Printed By :</strong> @UserManager.GetUserName(User).ToUpper()
            <br />
            <strong>Date & Time Printed :</strong> @DateTime.Now.ToString("MM/dd/yyyy hh:mm tt")
        </em>
    </p>
</div>

@if (!Model.IsPrint)
{
    <div class="text-end">
        ORIGINAL COPY
    </div>
}
else
{
    <div class="text-end">
        REPRINT COPY
    </div>
}

<br />
@* <a asp-action="OfficialReceipt" class="btn btn-success" asp-route-id="@Model.Id" onclick="printPage()" id="printButton">Print</a> *@
<a asp-action="PrintedOR" asp-route-id="@Model.Id" class="btn btn-success" onclick="printPage()" id="printButton">Print</a>
<a asp-action="OfficialReceiptIndex" class="btn" id="otherButton">Back</a>

@section Scripts{
    <script>
        var originalFontSizes = [];

        function printPage() {
            var printButton = document.getElementById("printButton");
            var otherButton = document.getElementById("otherButton");

            // Hide the header and footer
            document.querySelector("header").style.display = "none";
            document.querySelector("footer").style.display = "none";

            // Hide the buttons before printing
            if (printButton) {
                printButton.style.visibility = "hidden";
            }
            if (otherButton) {
                otherButton.style.visibility = "hidden";
            }

            // Get all paragraph elements
            var paragraphs = document.querySelectorAll("p");

            // Store the original font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                originalFontSizes[i] = paragraphs[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                paragraphs[i].style.fontSize = "12px";
            }

            // Call the print function
            window.print();

            // Restore the font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                paragraphs[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the buttons' visibility after printing (optional)
            if (printButton) {
                printButton.style.visibility = "visible";
            }
            if (otherButton) {
                otherButton.style.visibility = "visible";
            }

            // Restore the header and footer's visibility after printing (optional)
            document.querySelector("header").style.display = "";
            document.querySelector("footer").style.display = "";
        }
    </script>
}
